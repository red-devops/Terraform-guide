name: "Terraform - DEV"
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

env:
  ENVIRONMENT: dev
  REGION: eu-central-1
  TEAM: Platform-Engineering

jobs:
  terraform:
    name: Terraform
    runs-on: self-hosted
    
    strategy:
      max-parallel: 1
      matrix:
        component-path: 
          [ 
            "20-app-infra/21-network",
            "20-app-infra/22-security-groups", 
            "20-app-infra/23-data-base", 
            "20-app-infra/24-instances" 
            ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8
      
      - name: Terraform Format
        id: fmt
        working-directory: ${{ matrix.component-path }}
        run: terraform fmt -check

        
      - name: Terraform Init
        id: init
        working-directory: ${{ matrix.component-path }}
        run: terraform init  -backend-config=../../backend_config.hcl

      - name: Terraform Workspace
        id: workspace
        working-directory: ${{ matrix.component-path }}
        run: terraform workspace select ${{ env.ENVIRONMENT }}  || terraform workspace new ${{ env.ENVIRONMENT }}

      - name: Terraform Validate
        id: validate
        working-directory: ${{ matrix.component-path }}
        run: terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        working-directory: ${{ matrix.component-path }}
        run: terraform plan -var="team=${{ env.TEAM }}" -var="region=${{ env.REGION }}" -no-color
        continue-on-error: true

      - name: Comment Plan Status Success
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request' && steps.plan.outcome == 'success'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### Environment\ '${{ env.ENVIRONMENT }}\'
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization üôè\`${{ steps.init.outcome }}\`
            #### Terraform Validation üëç\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üëç\`${{ steps.plan.outcome }}\`
            #### Working directory\ '${{ matrix.component-path }}\'

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Comment Plan Status Failure
        uses: actions/github-script@v6
        if: steps.plan.outcome == 'failure'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stderr }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### Environment\ '${{ env.ENVIRONMENT }}\'
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization üôè\`${{ steps.init.outcome }}\`
            #### Terraform Validation üëç\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üí© \`${{ steps.plan.outcome }}\`
            #### Working directory\ '${{ matrix.component-path }}\'

            <details><summary>Show Error</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/dev' && github.event_name == 'push' 
        working-directory: ${{ matrix.component-path }}
        run: terraform apply -var="team=${{ env.TEAM }}" -var="region=${{ env.REGION }}" -no-color -auto-approve
